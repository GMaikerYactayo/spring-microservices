version: '3.8'

services:

  order-service:
    image: order-service
    restart: on-failure
    container_name: order-service-container
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      POSTGRES_URL: jdbc:postgresql://postgresql:5432/order_service_db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      CONFIG_URI: http://config-service:8888
    depends_on:
      - config-service
      - postgresql
      - eureka-service
      - product-service
    networks:
      - microservice_net

  product-service:
    image: product-service
    restart: on-failure
    container_name: product-service-container
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      MYSQL_URL: jdbc:mysql://mysql:3306/product_service_db
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
      CONFIG_URI: http://config-service:8888
      EUREKA_SERVER_URL: http://eureka-service:8761/eureka/
    depends_on:
      - config-service
      - mysql
      - eureka-service
    networks:
      - microservice_net

  eureka-service:
    image: eureka-service
    restart: on-failure
    container_name: eureka-service-container
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    environment:
      CONFIG_URI: http://config-service:8888
    networks:
      - microservice_net

  config-service:
    image: config-service
    restart: always
    container_name: config-service-container
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - microservice_net

  postgresql:
    image: postgres:15-alpine
    restart: on-failure
    container_name: postgres-container
    environment:
      POSTGRES_DB: order_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice_net

  mysql:
    image: mysql:latest
    restart: on-failure
    container_name: mysql-container
    environment:
      MYSQL_DATABASE: product_service_db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservice_net

volumes:
  postgres_data:
  mysql_data:

networks:
  microservice_net:
    driver: bridge